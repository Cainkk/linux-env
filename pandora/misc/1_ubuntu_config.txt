Target: Ubuntu 18.04

sudo apt-get update
sudo apt-get install -f

# ssh
# sudo apt-get install -y openssl # try openssl version to check version
# https://help.ubuntu.com/community/SSH
# man sshd_config
# sudo systemctl restart sshd.service
# ssh-keygen -t rsa # -C comment # public key: ~/.ssh/id_rsa.pub, private key: ~/.ssh/id_rsa
# ssh-copy-id username@remotehost # append public key to ~/.ssh/authorized_keys
# chmod 600 .ssh/authorized_keys
sudo apt install -y openssh-client openssh-server

# Android Build Environment on ubuntu (>=14.04)
# https://source.android.com/setup/build/initializing
sudo apt-get install -y git-core gnupg flex bison gperf build-essential \
zip curl zlib1g-dev gcc-multilib g++-multilib libc6-dev-i386 \
lib32ncurses5-dev x11proto-core-dev libx11-dev lib32z-dev \
libgl1-mesa-dev libxml2-utils xsltproc unzip

# java, https://source.android.com/setup/build/older-versions
sudo apt-get install -y openjdk-8-jdk # Android 7.0, 8.0

# repo
curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
chmod +x ~/bin/repo

# adb
sudo apt-get install -y adb

# google-chrome
wget -c https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
sudo dpkg -i google-chrome-stable_current_amd64.deb

# install vim/emacs
sudo apt-get install -y vim-gtk emacs

# install ctags/cscope/xcscope-el
sudo apt-get install -y exuberant-ctags cscope xcscope-el

# smb configuration
# https://help.ubuntu.com/community/How%20to%20Create%20a%20Network%20Share%20Via%20Samba%20Via%20CLI%20%28Command-line%20interface/Linux%20Terminal%29%20-%20Uncomplicated%2C%20Simple%20and%20Brief%20Way%21
sudo apt-get install -y samba smbclient
sudo smbpasswd -a <user_name>
sudo vi /etc/samba/smb.conf # added in the very end of file
cat <<-EOF
[htc_dcf_home]
   comment = dcf private home directory
   path = /home/dcf/
   browseable = yes
   read only = no
   valid users = dcf
EOF

sudo service smbd restart

sudo apt-get install smbclient
# List all shares:
smbclient -L //<HOST_IP_OR_NAME>/<folder_name> -U <user>
# connect:
smbclient //<HOST_IP_OR_NAME>/<folder_name> -U <user>

# install input-method wubi
sudo apt-get purge ibus
sudo apt-get install -y fcitx fcitx-config-common fcitx-table fcitx-table-wbpy
im-config -n fcitx # from ubuntu15.04, old is im-switch
# logout and relogin


# private linux environment
git clone https://github.com/Cainkk/linux-env.git
cd linux-env
git config user.email junyidcf@163.com
git config user.name junyidcf


##################################################





##################################################
# 2019.03.29 Seal
##################################################
Target: Ubuntu 14.04

1. Establishing a Build Environment
# https://source.android.com/setup/build/initializing
$ sudo apt-get install -y git-core gnupg flex bison gperf build-essential zip curl \
  zlib1g-dev gcc-multilib g++-multilib libc6-dev-i386 lib32ncurses5-dev x11proto-core-dev \
  libx11-dev lib32z-dev libgl1-mesa-dev libxml2-utils xsltproc unzip

2. Run apps on a hardware device
# https://developer.android.com/studio/run/device.html
# https://developer.android.com/studio/run/oem-usb.html
$ apt-get install adb
Q: error: insufficient permissions for device: udev requires plugdev group membership
$ id # what groups you are in
$ sudo usermod -aG plugdev $LOGNAME
Target: Ubuntu 10.04
>>Tips: Install ubuntu10.04-64 on XP is OK, ubuntu12.04-64 CANNOT(2012.5.20)
1. update sources.list
	#for sun-java6-jdk
	sudo add-apt-repository ppa:ferramroberto/java
	#for inputmethod
	sudo add-apt-repository ppa:shawn-p-huang/ppa 
	sudo apt-get update
2. install sun-java6-jdk
	# deb http://us.archive.ubuntu.com/ubuntu/ hardy multiverse
	$ sudo apt-get update && sudo apt-get install -y sun-java6-jdk
	/** OR **/ http://www.oracle.com/technetwork/java/javase/downloads/index.html
	download sun-java6-jdk, uncompress
	copy /usr/lib/jvm <OR> copy $HOME/dir/usr/lib/jvm
	$ sudo ln /usr/lib/jvm/jdk-1.6.0.x -s /usr/lib/jvm/java-6-sun
	vi .bashrc
	export JAVA_HOME=/usr/lib/jvm/java-6-sun
	export PATH=$JAVA_HOME/bin:$PATH
3. install inputmethod
	sudo apt-get install ibus-table-wubi ibus-sunpinyin
	#download vissible-ibus.tar.gz
	wget http://www.xiit.cn/wp-content/uploads/2011/03/vissible-ibus.tar.gz
	sudo cp vissible.db /usr/share/ibus-table/tables
	sudo cp vissible.gif /usr/share/ibus-table/icons
	(using Alt+Shift to switch pinyin to wubi)
4. install vim-gtk
	sudo apt-get install vim-gtk # support for "+p OR "*p
5. install openssh-server
	sudo apt-get install openssh-server
6. install virtualbox
	dowload: https://www.virtualbox.org/wiki/Downloads
	>>>1. Host(right-Ctrl)+D: install addtions
	>>>2. share setting: Host--Ubuntu, Client--xp
		>>>open vbox Manager -->select a client -->Settings -->Shared Folds
		>>>in xp, "My Computer", r-click, "reflect network..", driver: z, folder: \\vboxsvr\xxx
	>>>3. share setting: Client--Ubuntu:
		>>>sudo mount -t vboxsf gongxiang /mnt/shared
		>>>OR in /etc/fstab: gongxiang /mnt/shared vboxsf rw,gid=username,uid=username,auto 0 0
	>>>4. Access USB: sudo addgroup user vboxusers
	>>>5. transition format, e.g.: VBoxManage clonehd source.vmdk target.vdi --format VDI
7. install others
	#pdf and chm
	sudo apt-get install chmsee
	#download Adobe reader: http://get.adobe.com/reader/
	#install firefox(en_US): http://www.mozilla.org/en-US/firefox/all.html
	sudo apt-get remove firefox
	sudo tar jxvf firefox_tarball -C /usr/lib
	sudo ln /usr/lib/firefox/firefox -s /usr/bin/firefox
	#change firefox Icon: /usr/lib/firefox/icons
	#download libflashplayer.so(11.2) $ sudo mv libflashplayer.so /usr/lib/mozilla/plugins
	#install terminator
	sudo add-apt-repository ppa:gnome-terminator/ppa
	sudo apt-get install terminator
	#install stardict
	sudo apt-get install -y stardict
	> download directory: http://abloz.com/huzheng/stardict-dic/zh_CN/
	$ sudo mkdir -p /usr/share/stardict/dic && sudo tar xjvf stardict*.tar.bz2 -C /usr/share/stardict/dic
	> sound: wget http://stardict-3.googlecode.com/files/WyabdcRealPeopleTTS.tar.bz2
	$ sudo tar jxvf Wyabdc*.tar.jbz -C /usr/share
	> setup: preferences->dictionary->sound: play ==> aplay
8. make USBlive
	>>>make WinOS:
	sudo add-apt-repository ppa:colingille/freshlight
	sudo apt-get update
	sudo apt-get install winusb
	   >>>install on the whole device: sudo winusb --format <iso path> <device>
	   >>>install on the device partition: sudo winusb [--install] <iso path> <partition>
	>>>make Ubuntu OS:
	   >>> fdisk and mkfs.vfat -F32 -n ubuntu_live
	   >>> sudo grub-install --root-directory=/path/mountpoint device_point
	   >>> substitude boot/grub/grub.cfg
9. install google chrome
	wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
	sudo dpkg -i google-chrome-stable_current_amd64.deb
	sudo apt install -f

--------------------------------------------------------------------------------
Target: Android Develop Env, Ubuntu10.04
>>Tips: linux should be 64-bits from android2.1!!!?
Refs: http://source.android.com/source/initializing.html
1. android initializing environment
	sudo apt-get install git-core gnupg flex bison gperf build-essential \
	zip curl zlib1g-dev libc6-dev lib32ncurses5-dev ia32-libs \
	x11proto-core-dev libx11-dev lib32readline5-dev lib32z-dev \
	libgl1-mesa-dev g++-multilib mingw32 tofrodos python-markdown \
 	libxml2-utils xsltproc dkms linux-headers-$(uname -r)
2. install eclipse
	http://www.eclipse.org/downloads/?osType=linux
	download Eclipse Classic 3.7.2 linux 64-bits //Classic version
3. eclipse config for android develop

--------------------------------------------------------------------------------
Target: Android6.0, install openjdk-7.0

--------------------------------------------------------------------------------

FAQ: About VirtualBox

1. Q: ./VBoxLinuxAddtions.run on ubuntu client failed:
      The headers for the current running kernel were not found.
   A: sudo apt-get install dkms build-essential linux-headers-$(uname -r)
      (VBoxLinuxAddtions.run support folder share, copy share, and so on)

2. NO interface startup:
   C:\Program Files\Oracle\VirtualBox\VBoxManage.exe startvm "ubuntu1604" -type headless

3. Resize client HardDisk:
   VBoxmanage.exe modifymedium disk 'filename' --resize <megabytes>

4. Network on www, and communication with host:
   Add two ethernet-card, for host-only mode and NAT mode

5. Host-only driver on windows is removed:
   Uninstall and reinstall virtualbox. No effect if just repaire.

--------------------------------------------------------------------------------


